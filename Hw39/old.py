import sqlite3 as sq


class Tasks:
    def read_table(self):
        pass
    
    def add_to_table(self):
        pass
    
    def remove_from_table(self):
        pass
    
    def print_choices(self):
        pass
    
    def get_info(self, text):
        return input(text)



class Task1(Tasks):
    """
    1.	Создать  БД “онлайн-магазина,”с таблицами users, orders, products(таблицы можно создать через СУБД и наполнить их можно там же) и требования:
        a.	Пользователи могут регистрироваться, входить в систему и изменять свои данные.
        b.	Пользователи могут просматривать каталог товаров, добавлять их в корзину и оформлять заказы.
    """
    def __init__(self):
        self.bd_name = 'bd1.sqlite3'
    
    


class Task2(Tasks):
    """
    2.	Создать  БД “система управления задачами,”с таблицами users, tasks(таблицы можно создать через СУБД и наполнить их можно там же)  и требования:
        a.	Пользователи могут регистрироваться, входить в систему и изменять свои данные.
        b.	Пользователи могут создавать новые задачи, просматривать список задач и изменять их статус.
        c.	Пользователь должен получить уведомление о назначении новой задачи или изменении статуса по электронной почте.
    """
    def __init__(self):
        self.bd_name = 'bd2.sqlite3'


class Task3(Tasks):
    """
    3.	Создать  БД “система управления учебным процессом,”с таблицами students, courses, enrollments (таблицы можно создать через СУБД и наполнить их можно там же) и требования:
        a.	Администраторы имеют доступ ко всей информации в системе и могут добавлять/удалять/редактировать  новых студентов, преподавателей и курсы.
    """
    def __init__(self):
        self.bd_name = 'bd3.sqlite3'


class Task4(Tasks):
    """
    4. Если вам не подходит ни один из вариантов, можно сделать свою бд минимум с 2 таблицами, у которых обязательна должна быть связь между собой, опишите требования и реализуйте их
    Таблица "википедия", с таблицами authors, biographies и требования:
        a. Пользователь может получать данные о авторах и их биографии
    """
    def __init__(self):
        self.bd_name = 'bd4.sqlite3'
